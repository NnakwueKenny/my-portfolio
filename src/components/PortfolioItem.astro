---
import type { Skills } from '../types';
import Button from './Button.astro';
import DevLogo from './DevLogo.astro';

interface Props {
  title: string;
  tags: Skills[];
  image: string;
  isOpenSource?: boolean;
  githubStarsCount?: number;
  projectLink?: string;
  sourceCode?: string;
  projectYear: string;
}

const {
  title,
  tags,
  image,
  isOpenSource,
  githubStarsCount,
  projectLink,
  sourceCode,
  projectYear
} = Astro.props;
---

<article class="portfolio-item-wrapper">
  <div class="portfolio-item">
    <div class="project-year">{projectYear}</div>
    <div class="inner-content">
      <h2 class="title">
        {title}
        {isOpenSource && (
          <div class="openSource">
            <span class="open-source-badge">Open Source</span>
            {githubStarsCount && (
              <div class="ghStars" title="GitHub Stars">
                <svg fill="#e3b341" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
                  <path d="m908.1 353.1-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 0 0 .6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0 0 46.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z" stroke="none"/>
                </svg>
                {githubStarsCount}
              </div>
              )}
          </div>
        )}
      </h2>

      <slot name="subtitle" />
      <slot name="description" />

      <div class="tags">
        {tags.map(tag => <DevLogo icon={tag} size={30} />)}
      </div>

      <div class="buttons">
        {projectLink && (
          <Button variant="outline" href={projectLink} domProps={{ target: "_blank", rel: "noopener noreferrer" }}>
            View Project
            <svg style="margin-left: 5px;" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="m13 3 3.293 3.293-7 7 1.414 1.414 7-7L21 11V3z"></path><path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"></path></svg>
          </Button>
        )}

        {sourceCode && (
          <Button variant="outline" href={sourceCode} domProps={{ target: "_blank", rel: "noopener noreferrer" }}>
            View Source Code
            <svg style="margin-left: 5px;" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
              <path d="m7.375 16.781 1.25-1.562L4.601 12l4.024-3.219-1.25-1.562-5 4a1 1 0 0 0 0 1.562l5 4zm9.25-9.562-1.25 1.562L19.399 12l-4.024 3.219 1.25 1.562 5-4a1 1 0 0 0 0-1.562l-5-4zm-1.649-4.003-4 18-1.953-.434 4-18z" stroke="none"/>
            </svg>
          </Button>
        )}
      </div>
    </div>

    <img class="image" src={image} alt={title + " showcase"} width="580px">
  </div>
</article>

<style lang="scss">
  .portfolio-item-wrapper {
    position: relative;
  }

  .portfolio-item {
    display: flex;
    gap: 5rem;
    background: rgb(255 255 255 / 5%);
    padding: 25px;
    border-radius: 10px;
    overflow: hidden;
    align-items: center;
    &:nth-child(even) {
      flex-direction: row-reverse;
    }
  }

  .title {
    color: var(--color-mint);
    font-size: var(--font-size-4xl);
    margin-bottom: 1rem;
    margin-top: 0;
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .project-year {
    position: absolute;
    left: -50px;
    top: 55px;
    transform: rotate(270deg);
    color: var(--color-silver-700);
    font-size: var(--font-size-4xl);
  }

  .image {
    filter: drop-shadow(0 0 3rem rgb(21 255 147 / 35%));
    border-radius: 6px;
    align-self: center;
    flex: 1;
    width: 500px;
    max-width: 100%;
  }

  .buttons {
    margin-top: 2rem;
  }

  .inner-content {
    flex: 1;
  }

  .tags {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .open-source-badge {
    font-size: 12px;
    color: var(--color-orange-400);
    border: 1px solid var(--color-orange-400);
    padding: 2px 12px;
    border-radius: 4px;
  }

  .ghStars {
    color: var(--color-silver-300);
    font-size: var(--font-size-base);
    display: flex;
    gap: 0.25rem;
  }

  .openSource {
    display: flex;
    gap: 1rem;
  }

  @media screen and (max-width: 1360px) {
    .project-year {
      font-size: var(--font-size-xl);
      left: -32px;
    }
  }

  @media screen and (max-width: 1200px) {
    .image {
      width: 350px;
    }
  }

  @media screen and (max-width: 980px) {
    .portfolio-item {
      gap: 1.5rem;
      margin: 0 -25px;
      border-radius: 0;
      flex-direction: column;
      &:nth-child(even) {
        flex-direction: column;
      }
    }

    .image {
      max-width: 100%;
      align-self: flex-start;
      width: 500px;
    }

    .title {
      font-size: var(--font-size-2xl);
      flex-direction: column;
      align-items: flex-start;
    }

    .project-year {
      transform: rotate(0);
      top: 3px;
      left: unset;
      right: -20px;
    }
  }
</style>