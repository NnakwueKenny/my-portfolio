---
interface Props {
  variant?: "solid" | "outline";
  href?: string;
  size?: "xs" | "sm" | "md" | "lg" | "xl";
  colorScheme?: "blue" | "orange" | "green" | "silver";
  class?: string;
  domProps?: { [key: string]: any }
}

const {
  variant = "solid",
  href,
  size = "md",
  colorScheme = "green",
  domProps = {}
} = Astro.props;

const className = `button ${variant} size-${size} colorScheme-${colorScheme} ${Astro.props.class || ""}`;
---

{href ? (
  <a class={className} href={href} {...domProps}>
    <slot />
  </a>
) : (
  <button class={className} {...domProps}>
    <slot />
  </button>
)}

<style lang="scss">
  .button {
    color: initial;
    border: 1px solid;
    border-radius: 4px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    line-height: 1rem;
    transition: all 150ms ease-in-out;
    cursor: pointer;
    &:disabled {
      cursor: not-allowed;
      opacity: 0.75;
    }
    &:hover {
      text-decoration: none;
      box-shadow: 0 3px 20px rgba(240, 240, 240, 0.25);
    }
    &.solid {
      &.colorScheme-silver {
        background: var(--color-silver);
        &:hover {
          background: var(--color-silver-400);
        }
      }
      &.colorScheme-green {
        background: var(--color-mint);
        &:hover {
          background: var(--color-mint-400);
        }
      }
      &.colorScheme-blue {
        background: var(--color-blue);
        &:hover {
          background: var(--color-blue-400);
        }
      }
      &.colorScheme-orange {
        background: var(--color-orange);
        &:hover {
          background: var(--color-orange-400);
        }
      }
    }
    &.outline {
      background: transparent;
      &.colorScheme-silver {
        border-color: var(--color-silver);
        color: var(--color-silver);
        &:hover {
          background: var(--color-silver-400);
          color: initial;
        }
      }
      &.colorScheme-green {
        border-color: var(--color-mint);
        color: var(--color-mint);
        &:hover {
          background: var(--color-mint-400);
          color: initial;
        }
      }
      &.colorScheme-blue {
        border-color: var(--color-blue);
        color: var(--color-blue);
        &:hover {
          background: var(--color-blue-400);
          color: initial;
        }
      }
      &.colorScheme-orange {
        border-color: var(--color-orange);
        color: var(--color-orange);
        &:hover {
          background: var(--color-orange-400);
          color: initial;
        }
      }
    }
    &.size-xs {
      padding: 4px 12px;
      font-size: var(--font-size-xs);
    }
    &.size-sm {
      padding: 6px 18px;
      font-size: var(--font-size-sm);
    }
    &.size-md {
      padding: 8px 22px;
      font-size: var(--font-size-md);
    }
    &.size-lg {
      padding: 12px 28px;
      font-size: var(--font-size-lg);
    }
    &.size-xl {
      padding: 16px 32px;
      font-size: var(--font-size-xl);
    }
  }
</style>